import{_ as e,r as p,o,c,b as n,d as s,e as l,a}from"./app-1f20ff92.js";const i={},u=a(`<p>Angular 是一个基于 TypeScript 的前端框架，由 Google 维护，适用于构建单页面应用（SPA）。它采用组件化架构，提供了模块化的开发方式，并内置了依赖注入、路由管理、表单处理、HTTP 客户端等功能。</p><hr><h2 id="一、angular-基础概念" tabindex="-1"><a class="header-anchor" href="#一、angular-基础概念" aria-hidden="true">#</a> <strong>一、Angular 基础概念</strong></h2><h3 id="_1-angular-的核心特性" tabindex="-1"><a class="header-anchor" href="#_1-angular-的核心特性" aria-hidden="true">#</a> <strong>1. Angular 的核心特性</strong></h3><ul><li><p><strong>组件（Component）</strong>：UI 的基本构建块，每个组件包含 HTML 模板、CSS 样式和 TypeScript 逻辑。</p></li><li><p><strong>模块（Module）</strong>：使用 <code>NgModule</code> 进行模块化管理，默认根模块是 <code>AppModule</code>。</p></li><li><p>指令（Directive）</p><p>：</p><ul><li>结构型指令（如 <code>*ngIf</code>, <code>*ngFor</code>）</li><li>属性型指令（如 <code>[ngClass]</code>, <code>[ngStyle]</code>）</li></ul></li><li><p>数据绑定（Data Binding）</p><p>：</p><ul><li><strong>插值绑定</strong>：<code>{{ variable }}</code></li><li><strong>属性绑定</strong>：<code>[property]=&quot;value&quot;</code></li><li><strong>事件绑定</strong>：<code>(event)=&quot;handler()&quot;</code></li><li><strong>双向绑定</strong>：<code>[(ngModel)]=&quot;value&quot;</code></li></ul></li><li><p><strong>服务（Service）和依赖注入（Dependency Injection）</strong>：用于逻辑分离和共享数据，使用 <code>@Injectable()</code> 标记。</p></li><li><p><strong>路由（Router）</strong>：用于管理单页面应用的导航，基于 <code>@angular/router</code>。</p></li></ul><hr><h2 id="二、安装与创建项目" tabindex="-1"><a class="header-anchor" href="#二、安装与创建项目" aria-hidden="true">#</a> <strong>二、安装与创建项目</strong></h2><h3 id="_1-安装-angular-cli" tabindex="-1"><a class="header-anchor" href="#_1-安装-angular-cli" aria-hidden="true">#</a> <strong>1. 安装 Angular CLI</strong></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> @angular/cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-创建-angular-项目" tabindex="-1"><a class="header-anchor" href="#_2-创建-angular-项目" aria-hidden="true">#</a> <strong>2. 创建 Angular 项目</strong></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ng new my-angular-app
<span class="token builtin class-name">cd</span> my-angular-app
ng serve
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),r={href:"http://localhost:4200/",target:"_blank",rel:"noopener noreferrer"},d=a(`<hr><h2 id="三、组件-component" tabindex="-1"><a class="header-anchor" href="#三、组件-component" aria-hidden="true">#</a> <strong>三、组件（Component）</strong></h2><p>组件是 Angular 应用的核心。每个组件由以下三部分组成：</p><ul><li><strong>HTML 模板（template）</strong></li><li><strong>CSS 样式（styles）</strong></li><li><strong>TypeScript 逻辑（class）</strong></li></ul><h3 id="_1-创建组件" tabindex="-1"><a class="header-anchor" href="#_1-创建组件" aria-hidden="true">#</a> <strong>1. 创建组件</strong></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ng generate component my-component
<span class="token comment"># 或简写</span>
ng g c my-component
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-组件代码结构" tabindex="-1"><a class="header-anchor" href="#_2-组件代码结构" aria-hidden="true">#</a> <strong>2. 组件代码结构</strong></h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&#39;app-my-component&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// 组件的 HTML 选择器</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&#39;./my-component.component.html&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// 组件的 HTML 模板</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;./my-component.component.css&#39;</span><span class="token punctuation">]</span>  <span class="token comment">// 组件的样式文件</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token punctuation">{</span>
  title <span class="token operator">=</span> <span class="token string">&#39;Hello Angular&#39;</span><span class="token punctuation">;</span>

  <span class="token function">changeTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;Title Changed!&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-组件模板" tabindex="-1"><a class="header-anchor" href="#_3-组件模板" aria-hidden="true">#</a> <strong>3. 组件模板</strong></h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>{{ title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changeTitle()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Change Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、指令-directives" tabindex="-1"><a class="header-anchor" href="#四、指令-directives" aria-hidden="true">#</a> <strong>四、指令（Directives）</strong></h2><h3 id="_1-结构型指令" tabindex="-1"><a class="header-anchor" href="#_1-结构型指令" aria-hidden="true">#</a> <strong>1. 结构型指令</strong></h3><ul><li><code>*ngIf</code>：条件渲染</li><li><code>*ngFor</code>：循环列表</li><li><code>*ngSwitch</code>：条件分支</li></ul><p>示例：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isVisible<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>这个文本会根据 isVisible 变量决定是否显示。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ item }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">[ngSwitch]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>status<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">*ngSwitchCase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>success&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>成功<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">*ngSwitchCase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>error&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>错误<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">*ngSwitchDefault</span><span class="token punctuation">&gt;</span></span>未知<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-属性型指令" tabindex="-1"><a class="header-anchor" href="#_2-属性型指令" aria-hidden="true">#</a> <strong>2. 属性型指令</strong></h3><ul><li><code>[ngClass]</code>：动态类</li><li><code>[ngStyle]</code>：动态样式</li></ul><p>示例：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">[ngClass]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{&#39;active&#39;: isActive}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>动态样式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">[ngStyle]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{&#39;color&#39;: color}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>动态颜色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="五、数据绑定-data-binding" tabindex="-1"><a class="header-anchor" href="#五、数据绑定-data-binding" aria-hidden="true">#</a> <strong>五、数据绑定（Data Binding）</strong></h2><h3 id="_1-插值-interpolation" tabindex="-1"><a class="header-anchor" href="#_1-插值-interpolation" aria-hidden="true">#</a> <strong>1. 插值（Interpolation）</strong></h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>{{ title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-属性绑定-property-binding" tabindex="-1"><a class="header-anchor" href="#_2-属性绑定-property-binding" aria-hidden="true">#</a> <strong>2. 属性绑定（Property Binding）</strong></h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">[src]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>imageUrl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-事件绑定-event-binding" tabindex="-1"><a class="header-anchor" href="#_3-事件绑定-event-binding" aria-hidden="true">#</a> <strong>3. 事件绑定（Event Binding）</strong></h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleClick()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-双向数据绑定-two-way-binding" tabindex="-1"><a class="header-anchor" href="#_4-双向数据绑定-two-way-binding" aria-hidden="true">#</a> <strong>4. 双向数据绑定（Two-way Binding）</strong></h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>输入的值是：{{ name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意</strong>：需要导入 <code>FormsModule</code></p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> FormsModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/forms&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="六、服务-service-和依赖注入-di" tabindex="-1"><a class="header-anchor" href="#六、服务-service-和依赖注入-di" aria-hidden="true">#</a> <strong>六、服务（Service）和依赖注入（DI）</strong></h2><h3 id="_1-创建服务" tabindex="-1"><a class="header-anchor" href="#_1-创建服务" aria-hidden="true">#</a> <strong>1. 创建服务</strong></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ng generate <span class="token function">service</span> my-service
<span class="token comment"># 或简写</span>
ng g s my-service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-服务代码" tabindex="-1"><a class="header-anchor" href="#_2-服务代码" aria-hidden="true">#</a> <strong>2. 服务代码</strong></h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  providedIn<span class="token operator">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 自动提供依赖</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">MyService</span> <span class="token punctuation">{</span>
  <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Hello from Service!&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-在组件中使用" tabindex="-1"><a class="header-anchor" href="#_3-在组件中使用" aria-hidden="true">#</a> <strong>3. 在组件中使用</strong></h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> MyService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./my-service.service&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&#39;app-my-component&#39;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&#39;./my-component.component.html&#39;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;./my-component.component.css&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token punctuation">{</span>
  message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> myService<span class="token operator">:</span> MyService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>myService<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="七、路由-router" tabindex="-1"><a class="header-anchor" href="#七、路由-router" aria-hidden="true">#</a> <strong>七、路由（Router）</strong></h2><h3 id="_1-配置路由" tabindex="-1"><a class="header-anchor" href="#_1-配置路由" aria-hidden="true">#</a> <strong>1. 配置路由</strong></h3><p>在 <code>app-routing.module.ts</code> 中：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> RouterModule<span class="token punctuation">,</span> Routes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/router&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> HomeComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./home/home.component&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AboutComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./about/about.component&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> routes<span class="token operator">:</span> Routes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;about&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> AboutComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>RouterModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span>routes<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  exports<span class="token operator">:</span> <span class="token punctuation">[</span>RouterModule<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppRoutingModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-在-html-中使用路由" tabindex="-1"><a class="header-anchor" href="#_2-在-html-中使用路由" aria-hidden="true">#</a> <strong>2. 在 HTML 中使用路由</strong></h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">routerLink</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">routerLink</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>关于<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-outlet</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-outlet</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="八、表单处理" tabindex="-1"><a class="header-anchor" href="#八、表单处理" aria-hidden="true">#</a> <strong>八、表单处理</strong></h2><h3 id="_1-模板驱动表单" tabindex="-1"><a class="header-anchor" href="#_1-模板驱动表单" aria-hidden="true">#</a> <strong>1. 模板驱动表单</strong></h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">#myForm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ngForm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ngModel</span> <span class="token attr-name">required</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!myForm.valid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-响应式表单" tabindex="-1"><a class="header-anchor" href="#_2-响应式表单" aria-hidden="true">#</a> <strong>2. 响应式表单</strong></h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> FormGroup<span class="token punctuation">,</span> FormControl<span class="token punctuation">,</span> Validators <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/forms&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&#39;app-login&#39;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&#39;./login.component.html&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">LoginComponent</span> <span class="token punctuation">{</span>
  loginForm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormGroup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    email<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>Validators<span class="token punctuation">.</span>required<span class="token punctuation">,</span> Validators<span class="token punctuation">.</span>email<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    password<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>Validators<span class="token punctuation">.</span>required<span class="token punctuation">,</span> Validators<span class="token punctuation">.</span><span class="token function">minLength</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loginForm<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="九、http-请求" tabindex="-1"><a class="header-anchor" href="#九、http-请求" aria-hidden="true">#</a> <strong>九、HTTP 请求</strong></h2><h3 id="_1-使用-httpclient" tabindex="-1"><a class="header-anchor" href="#_1-使用-httpclient" aria-hidden="true">#</a> <strong>1. 使用 HttpClient</strong></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ng generate <span class="token function">service</span> api
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 <code>api.service.ts</code> 中：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> HttpClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/common/http&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  providedIn<span class="token operator">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ApiService</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.example.com/data&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>app.module.ts</code> 中导入 <code>HttpClientModule</code>：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> HttpClientModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/common/http&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><p>这是 Angular 的基础入门，你可以根据需求深入学习 <code>RxJS</code>、<code>State Management（NgRx）</code> 等高级功能！ 🚀</p>`,63);function k(g,m){const t=p("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("默认访问地址："),n("a",r,[s("http://localhost:4200"),l(t)])]),d])}const h=e(i,[["render",k],["__file","angular基础.html.vue"]]);export{h as default};
